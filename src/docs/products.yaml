tags:
  name: Products
  description: Operaciones relacionadas con productos

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        status:
          type: boolean
          description: Estado del producto
        code:
          type: string
          description: Código único del producto
        stock:
          type: number
          description: Stock del producto
        category:
          type: string
          description: Categoría del producto
        owner:
          type: string
          description: Propietario del producto
      example:
        title: Buzo Azul
        description: Buzo azul oversize
        price: 15000
        status: true
        code: 1000
        stock: 10
        category: Buzos
        owner: sf@gmail.com

  requestBodies:
    updateProduct:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'


paths:
  /api/products:
    get:
      summary: Obtiene una lista de productos
      tags:
        - Products
      responses:
        "200":
          description: Lista de productos obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error interno del servidor...

    post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado con éxito
        "400":
          description: Parámetros de entrada no válidos
        "403":
          description: Acceso no autorizado

  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a obtener
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto obtenido con éxito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado en la base de datos
        "500":
          description: Error interno del servidor... 
          
    put:
      summary: Actualiza un producto por su ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a actualizar
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado con éxito
        "400":
          description: Parámetros de entrada no válidos
        "403":
          description: Acceso no autorizado
        "404":
          description: Producto no encontrado en la base de datos

    delete:
      summary: Elimina un producto por su ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a eliminar
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado con éxito
        "403":
          description: Acceso no autorizado
        "404":
          description: Producto no encontrado en la base de datos

  /api/products/mockingproducts:
    get:
      summary: Obtiene productos simulados (mock)
      tags:
        - Products
      responses:
        "200":
          description: Lista de productos simulados obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"